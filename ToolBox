#Toolbox
import maya.cmds as cmds

class Toolbox():
	def __init__(self):
		self.window_name = "jlToolbox"
		
	def create(self):
		self.delete()
	
		self.window_name = cmds.window(self.window_name)
		self.m_column = cmds.columnLayout(p=self.window_name, adj=True)
		cmds.button(p=self.m_column,
					label='MyButton',
					c=lambda *args: cmds.polySphere(r=2))
		cmds.button(p=self.m_column,
					label='Yellow',
					command=lambda *args: self.colorControl('yellow'))
		self.color = cmds.textField(p=self.m_column)
		cmds.button(p=self.m_column,
					label='Change Color',
					command=lambda *args: self.colorBtn())
		cmds.button(p=self.m_column,
					label='Select Everything',
					command=lambda *args: self.selectBtn())						
		
		cmds.showWindow(self.window_name)
		
	def delete(self):
		if cmds.window(self.window_name, exists=True):
			cmds.deleteUI(self.window_name)
	
	def selectBtn():
		import tools
		tools.select_all()
	
	def colorBtn(self):
		value = cmds.textField(self.color, q=True, text=True)
		self.colorControl(value)
		cmds.textField(self.color, q=True, text='')

	def colorControl(self, colorname):
		if colorname == 'yellow':
			color = 17
		elif colorname == 'blue':
			color = 6
		else:
			color = 5
		
		sels = cmds.ls(sl=True)
	
		for sel in sels: #iterate through each selection
			shapes = cmds.listRelatives(sel, children=True, shapes=True)
		
			for shape in shapes: #iterate through each shape
				cmds.setAttr('%s.overrideEnabled' % shape, True)
				cmds.setAttr('%s.overrideColor' % shape, color)
			

	
myTool = Toolbox()
myTool.create()
